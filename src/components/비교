import { useState } from 'react'
import type { Todo } from '../App'

export default function TodoItem({
  todo,
  setTodo,
  deleteTodo
}: {
  todo: Todo
  setTodo: (updatedTodo: Todo) => void
  deleteTodo: (todoToDelete: Todo) => void
}) {
  const [title, setTitle] = useState(todo.title)

  async function keydownHandler(event: React.KeyboardEvent<HTMLInputElement>) {
    if (event.key === 'Enter') {
      updateTodo()
    }
  }
  async function updateTodo() {
    // 낙관적 업데이트
    setTodo({ ...todo, title })
    try {
      await new Promise(resolve => setTimeout(resolve, 2000))
      const res = await fetch(
        `https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos/${todo.id}`,
        {
          method: 'PUT',
          headers: {
            'content-type': 'application/json',
            apikey: '5X8Z1k7M2vU5Q',
            username: 'Grepp_KDT4_ParkYoungWoong'
          },
          body: JSON.stringify({
            title,
            done: todo.done
          })
        }
      )
      const updatedTodo: Todo = await res.json()
      console.log(updatedTodo, title)
    } catch (error) {
      // 어?! 문제가 생겼네..
      // 근데, 나는 낙관적으로 업데이트를 이미 했는데..
      // 어쩌지?
      console.error(error)
      setTodo(todo)
    }
    // setTodo(updatedTodo)
  }
  async function deleteMe() {
    console.log('deleteMe!!')
    await fetch(
      `https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos/${todo.id}`,
      {
        method: 'DELETE',
        headers: {
          'content-type': 'application/json',
          apikey: '5X8Z1k7M2vU5Q',
          username: 'Grepp_KDT4_ParkYoungWoong'
        }
      }
    )
    deleteTodo(todo)
  }

  return (
    <li>
      {todo.title}
      <input
        value={title}
        onChange={e => setTitle(e.target.value)}
        onKeyDown={keydownHandler}
      />
      <button onClick={() => deleteMe()}>삭제</button>
    </li>
  )
}